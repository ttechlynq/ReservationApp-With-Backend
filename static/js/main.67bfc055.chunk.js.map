{"version":3,"sources":["reducers/reservationReducer.js","actions/reservationActions.js","store.js","components/ReservationForm.js","components/ReservationList.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","reservations","reservationReducer","state","arguments","length","undefined","action","type","_objectSpread","concat","_toConsumableArray","payload","updatedReservations","map","reservation","id","updatedReservation","filteredReservations","filter","persistConfig","key","storage","rootReducer","combineReducers","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistStore","ReservationForm","dispatch","useDispatch","_useState","useState","name","date","time","partySize","_useState2","_slicedToArray","formData","setFormData","handleChange","e","_defineProperty","target","value","React","createElement","className","onSubmit","preventDefault","newReservation","Date","now","onChange","placeholder","required","min","ReservationList","useSelector","editedReservation","setEditedReservation","handleSave","parseInt","onClick","handleEdit","deleteReservation","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.67bfc055.chunk.js","sourcesContent":["import {\r\n    MAKE_RESERVATION,\r\n    UPDATE_RESERVATION,\r\n    DELETE_RESERVATION,\r\n} from \"../actions/reservationActions\";\r\n\r\nconst initialState = {\r\n    reservations: [],\r\n};\r\n\r\nconst reservationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case MAKE_RESERVATION:\r\n        return {\r\n            ...state,\r\n            reservations: [...state.reservations, action.payload],\r\n        };\r\n\r\n        case UPDATE_RESERVATION:\r\n            const updatedReservations = state.reservations.map((reservation) =>\r\n                reservation.id === action.payload.id ? action.payload.updatedReservation : reservation\r\n            );\r\n            return {\r\n              ...state,\r\n              reservations: updatedReservations,\r\n            };\r\n\r\n        case DELETE_RESERVATION:\r\n              const filteredReservations = state.reservations.filter(\r\n                (reservation) => reservation.id !== action.payload\r\n              );\r\n                return {\r\n                    ...state,\r\n                    reservations: filteredReservations,\r\n                };\r\n\r\n//        case DELETE_RESERVATION:\r\n//              const updatedReservations = state.reservations.filter(\r\n//                (reservation) => reservation.id !== action.payload\r\n//              );\r\n//                return {\r\n//                    ...state,\r\n//                    reservations: updatedReservations,\r\n//                };\r\n\r\n          default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reservationReducer;","//Action types\r\nexport const MAKE_RESERVATION = \"MAKE_RESERVATION\";\r\nexport const UPDATE_RESERVATION = \"UPDATE_RESERVATION\";\r\nexport const DELETE_RESERVATION = \"DELETE_RESERVATION\";\r\n\r\n//Action creators\r\nexport const makeReservation = (reservation) => ({\r\n    type: MAKE_RESERVATION,\r\n    payload: reservation,\r\n});\r\n\r\nexport const updateReservation = (id, updatedReservation) => ({\r\n    type: UPDATE_RESERVATION,\r\n    payload: {id, updatedReservation },\r\n});\r\n\r\nexport const deleteReservation = (id) => ({\r\n    type: DELETE_RESERVATION,\r\n    payload: id,\r\n})\r\n\r\n\r\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport thunk from \"redux-thunk\";\r\nimport reservationReducer from \"./reducers/reservationReducer\";\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    reservations: reservationReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n//    rootReducer,\r\n    persistedReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeReservation } from \"../actions/reservationActions\";\r\n\r\nconst ReservationForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        date: \"\",\r\n        time: \"\",\r\n        partySize: 1,\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newReservation = {\r\n            ...formData,\r\n            id: Date.now(),\r\n        }\r\n\r\n\r\n\r\n        dispatch(makeReservation(newReservation));\r\n        setFormData({\r\n            name: \"\",\r\n            date: \"\",\r\n            time: \"\",\r\n            partySize: 1,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form className=\"reservation-form\" onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            placeholder=\"Name\"\r\n            required\r\n            />\r\n        <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={formData.date}\r\n            onChange={handleChange}\r\n            required\r\n            />\r\n        <input\r\n            type=\"time\"\r\n            name=\"time\"\r\n            value={formData.time}\r\n            onChange={handleChange}\r\n            required\r\n            />\r\n\r\n        <input\r\n            type=\"number\"\r\n            name=\"partySize\"\r\n            value={formData.partySize}\r\n            onChange={handleChange}\r\n            min=\"1\"\r\n            required\r\n            />\r\n        <button type=\"submit\">Make Reservation</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ReservationForm;","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import { connect } from \"react-redux\";\r\nimport { deleteReservation,updateReservation } from \"../actions/reservationActions\";\r\n\r\nconst ReservationList = () => {\r\n    const dispatch = useDispatch();\r\n    const reservations = useSelector((state) => state.reservations.reservations);\r\n    const [editedReservation, setEditedReservation] = useState({})\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(deleteReservation(id));\r\n    };\r\n\r\n    const handleEdit = (reservation) => {\r\n        setEditedReservation({...reservation});\r\n    };\r\n\r\n    const handleSave = () => {\r\n//        if (editedReservation !== null && editedReservation.name) {\r\n           if (\r\n      editedReservation &&\r\n      editedReservation.id &&\r\n      editedReservation.name &&\r\n      editedReservation.date &&\r\n      editedReservation.time &&\r\n      editedReservation.partySize\r\n           ) {\r\n            dispatch(updateReservation(editedReservation.id, editedReservation));\r\n            setEditedReservation(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"reservation-list\">\r\n            <h2>Reservations</h2>\r\n            <ul>\r\n                {reservations.map((reservation) => (\r\n                    <li key={reservation.id}>\r\n                        {editedReservation !== null && editedReservation.id === reservation.id ? (\r\n                            <div>\r\n                                <input\r\n                                 type=\"text\"\r\n                                 value={editedReservation.name}\r\n                                 onChange={(e) =>\r\n                                    setEditedReservation({\r\n                                        ...editedReservation,\r\n                                        name: e.target.value,\r\n                                    })\r\n                                 }\r\n                                 />\r\n                                <input\r\n                                    type=\"date\"\r\n                                    value={editedReservation.date}\r\n                                    onChange={(e) =>\r\n                                        setEditedReservation({\r\n                                            ...editedReservation,\r\n                                            date: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    />\r\n                                <input\r\n                                    type=\"time\"\r\n                                    value={editedReservation.time}\r\n                                    onChange={(e) =>\r\n                                        setEditedReservation({\r\n                                            ...editedReservation,\r\n                                            time: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    />\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={editedReservation.partySize}\r\n                                    onChange={(e) =>\r\n                                        setEditedReservation({\r\n                                            ...editedReservation,\r\n                                            partySize: parseInt(e.target.value),\r\n                                        })\r\n                                    }\r\n                            />\r\n                            <button onClick={handleSave}>Save</button>\r\n                            </div>\r\n                            ) : (\r\n                        <div>\r\n                        <div>{reservation.name}</div>\r\n                        <div>{reservation.date}</div>\r\n                        <div>{reservation.time}</div>\r\n                        <div>Party Size: {reservation.partySize}</div>\r\n                        <button onClick={() => handleEdit(reservation)}>Edit</button>\r\n                        <button onClick={() => handleDelete(reservation.id)}>Delete</button>\r\n                        </div>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReservationList;\r\n\r\n//    const mapStateToProps = (state) => {\r\n//        return {\r\n//            reservations: state.reservations.reservations,\r\n//        };\r\n//    };\r\n//\r\n//export default connect(mapStateToProps)(ReservationList);","import React from \"react\";\nimport ReservationForm from \"./components/ReservationForm\";\nimport ReservationList from \"./components/ReservationList\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ReservationForm />\n        <ReservationList />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}